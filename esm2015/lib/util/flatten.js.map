{"version":3,"file":"flatten.js","sourceRoot":"","sources":["../../../../../../../libs/appwrite/angular/src/lib/util/flatten.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,OAAO,CAAC,IAAa,EAAE,MAAM,GAAG,EAAE;IAChD,IAAI,MAAM,GAAY,EAAE,CAAC;IAEzB,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAEpD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;SAC1D;aAAM;YACL,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;SAC1B;KACF;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import { Payload } from '../types';\r\n\r\nexport function flatten(data: Payload, prefix = ''): Payload {\r\n  let output: Payload = {};\r\n\r\n  for (const key in data) {\r\n    const value = data[key];\r\n    const finalKey = prefix ? `${prefix}[${key}]` : key;\r\n\r\n    if (Array.isArray(value)) {\r\n      output = Object.assign(output, flatten(value, finalKey));\r\n    } else {\r\n      output[finalKey] = value;\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n"]}