{"version":3,"file":"appwrite.service.js","sourceRoot":"","sources":["../../../../../../../libs/appwrite/angular/src/lib/services/appwrite.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpBackend, HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport URLParse from 'url-parse';\r\nimport { APPWRITE_LOCAL_STORAGE_PROVIDER_TOKEN, AppwriteOptions } from '../appwrite-angular.module';\r\nimport { AppwriteException } from '../exceptions';\r\nimport { APPWRITE_LOCATION_PROVIDER_TOKEN, APPWRITE_OPTIONS_TOKEN } from '../tokens';\r\nimport { Headers, HttpMethods, Payload } from '../types';\r\nimport { flatten } from '../util';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppwriteService {\r\n  config = {\r\n    endpoint: 'https://appwrite.io/v1',\r\n    project: '',\r\n    jwt: '',\r\n    locale: '',\r\n  };\r\n  headers: Headers = {\r\n    'x-sdk-version': 'appwrite:web:3.2.0',\r\n    'X-Appwrite-Response-Format': '0.9.0',\r\n  };\r\n  private http: HttpClient;\r\n\r\n  constructor(\r\n    @Inject(APPWRITE_OPTIONS_TOKEN) config: AppwriteOptions['config'],\r\n    @Inject(APPWRITE_LOCAL_STORAGE_PROVIDER_TOKEN) public localStorageProvider,\r\n    @Inject(APPWRITE_LOCATION_PROVIDER_TOKEN) public locationProvider,\r\n    httpBackend: HttpBackend\r\n  ) {\r\n    this.http = new HttpClient(httpBackend);\r\n\r\n    if (!config || !config.endpointUrl || !config.endpointUrl) {\r\n      throw new Error('You are missing required config properties');\r\n    }\r\n    this.config.endpoint = config.endpointUrl;\r\n    this.config.project = config.projectId;\r\n    this.setEndpoint(config.endpointUrl).setProject(config.projectId);\r\n  }\r\n\r\n  setEndpoint(endpoint: string): this {\r\n    this.config.endpoint = endpoint;\r\n    return this;\r\n  }\r\n\r\n  setProject(value: string): this {\r\n    this.headers['X-Appwrite-Project'] = value;\r\n    this.config.project = value;\r\n    return this;\r\n  }\r\n\r\n  setJWT(value: string): this {\r\n    this.headers['X-Appwrite-JWT'] = value;\r\n    this.config.jwt = value;\r\n    return this;\r\n  }\r\n\r\n  setLocale(value: string): this {\r\n    this.headers['X-Appwrite-Locale'] = value;\r\n    this.config.locale = value;\r\n    return this;\r\n  }\r\n\r\n  public async call<T>(method: HttpMethods, path: string, headers: Headers = {}, params: Payload = {}): Promise<T> {\r\n    const url = new URLParse(this.config.endpoint + path);\r\n    method = method.toUpperCase() as HttpMethods;\r\n    headers = {\r\n      ...headers,\r\n      ...this.headers\r\n    };\r\n    const options: RequestInit = {\r\n      method,\r\n      headers,\r\n      credentials: 'include'\r\n    };\r\n    if (typeof this.localStorageProvider !== 'undefined' && this.localStorageProvider) {\r\n      headers['X-Fallback-Cookies'] = this.localStorageProvider.getItem('cookieFallback') ?? '';\r\n    }\r\n\r\n    if (method === 'GET') {\r\n      url.set('query', flatten(params));\r\n    } else {\r\n      switch (headers['content-type']) {\r\n        case 'application/json':\r\n          options.body = JSON.stringify(params);\r\n          break;\r\n\r\n        case 'multipart/form-data':\r\n          const formData = new FormData();\r\n\r\n          for (const key in params) {\r\n            if (Array.isArray(params[key])) {\r\n              formData.append(key + '[]', params[key].join(','));\r\n            } else {\r\n              formData.append(key, params[key]);\r\n            }\r\n          }\r\n\r\n          options.body = formData;\r\n          delete headers['content-type'];\r\n          break;\r\n      }\r\n    }\r\n\r\n    try {\r\n\r\n      const response: HttpResponse<T> = await this.http.request<T>(method, url.toString(), {\r\n        ...options,\r\n        headers: headers,\r\n        // observe: 'response',\r\n        observe: 'response' as 'response',\r\n        // observe: 'response' as 'body',\r\n      }).toPromise();\r\n      let data: any | { message: string } = null;\r\n      if (response.headers.get('content-type')?.includes('application/json')) {\r\n        data = response.body;\r\n      } else {\r\n        data = {\r\n          message: response.body\r\n        };\r\n      }\r\n\r\n      if (400 <= response.status) { throw new AppwriteException(data?.message, response.status, data); }\r\n\r\n      const cookieFallback = response.headers.get('X-Fallback-Cookies');\r\n\r\n      if (typeof this.localStorageProvider !== 'undefined' && this.localStorageProvider && cookieFallback) {\r\n        console.warn(\r\n          'Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint.');\r\n        this.localStorageProvider.setItem('cookieFallback', cookieFallback);\r\n      }\r\n\r\n      return data;\r\n    } catch (e) {\r\n      throw new AppwriteException(e.message);\r\n    }\r\n  }\r\n}\r\n"]}